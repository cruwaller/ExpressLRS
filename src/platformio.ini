; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
include_dir = src
extra_configs =
    platformio_esp32.ini
    platformio_esp82xx.ini
    platformio_r9.ini
    platformio_stm32.ini
	#src/stm32_native/stm32_native.ini
	#src/stm32_hal/stm32_hal.ini
	utils/ESP8266SerialToWebsocket/platformio_logger.ini

[env]
lib_extra_dirs =
    lib/Radio

################################# COMMON ########################################

[common_env_data]
flags_tx = -DTX_MODULE=1 -I${PROJECTSRC_DIR}
flags_rx = -DRX_MODULE=1 -I${PROJECTSRC_DIR}
flags_esp32 = -DPLATFORM_ESP32=1 -I${PROJECTSRC_DIR}/esp32/
flags_esp82xx = -DPLATFORM_ESP8266=1  -I${PROJECTSRC_DIR}/esp82xx/
flags_stm32_gen = -DICACHE_RAM_ATTR="" -DPLATFORM_STM32=1 -I${PROJECTSRC_DIR}/stm32_generic/ -Wl,-Map,firmware.map
flags_stm32 = ${common_env_data.flags_stm32_gen} -I${PROJECTSRC_DIR}/stm32/
flags_stm32_tx_disable =
	-D HAL_RTC_MODULE_DISABLED=1
	-D HAL_ADC_MODULE_DISABLED=1
	-D HWSERIAL_NONE=1
	-D ENABLE_HWSERIAL1=1
	-D DISABLE_GENERIC_SERIALUSB=1
flags_stm32_rx_disable =
	-D HAL_RTC_MODULE_DISABLED=1
	-D HAL_I2C_MODULE_DISABLED=1
	-D HAL_ADC_MODULE_DISABLED=1
	-D HWSERIAL_NONE=1
	#-D ENABLE_HWSERIAL1=1
	-D DISABLE_GENERIC_SERIALUSB=1
src_filter = +<*.cpp> +<*.c>
src_rx = +<rx/*> ${common_env_data.src_filter}
src_tx = +<tx/*> ${common_env_data.src_filter}
src_esp32 = +<esp32/*>
src_esp82xx = +<esp82xx/*>
src_stm32 = +<stm32/*> +<stm32_generic/*>
extra_scripts = pre:python/build_flags.py
lib_deps_esp32 =
	https://github.com/tzapu/WiFiManager.git#development
	WebSockets
lib_ignore_esp32 = Wire, DAC, FIFO, BLE

################################# SX1280 ########################################

[env:SX1280_TX_ESP32_PCB_E28]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags =
	${common_env_data.flags_tx}
	${common_env_data.flags_esp32}
	-D TARGET_SX1280_TX_ESP32_WROOM=1
	-D TARGET_MODULE_E28=1
	-D DOMAIN_24GHZ=1
src_filter = ${common_env_data.src_tx} ${common_env_data.src_esp32}
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = ${common_env_data.lib_deps_esp32}
lib_ignore = ${common_env_data.lib_ignore_esp32}, LoRa_SX127x

[env:SX1280_TX_ESP32_PCB_GNiceRF]
platform = ${env:SX1280_TX_ESP32_PCB_E28.platform}
board = ${env:SX1280_TX_ESP32_PCB_E28.board}
framework = ${env:SX1280_TX_ESP32_PCB_E28.framework}
upload_speed = ${env:SX1280_TX_ESP32_PCB_E28.upload_speed}
upload_resetmethod = ${env:SX1280_TX_ESP32_PCB_E28.upload_resetmethod}
monitor_speed = ${env:SX1280_TX_ESP32_PCB_E28.monitor_speed}
monitor_dtr = ${env:SX1280_TX_ESP32_PCB_E28.monitor_dtr}
monitor_rts = ${env:SX1280_TX_ESP32_PCB_E28.monitor_rts}
build_flags =
	${common_env_data.flags_tx}
	${common_env_data.flags_esp32}
	-D TARGET_SX1280_TX_ESP32_WROOM=1
	-D TARGET_MODULE_LORA1280F27=1
	-D DOMAIN_24GHZ=1
src_filter = ${env:SX1280_TX_ESP32_PCB_E28.src_filter}
extra_scripts = ${env:SX1280_TX_ESP32_PCB_E28.extra_scripts}
lib_deps = ${env:SX1280_TX_ESP32_PCB_E28.lib_deps}
lib_ignore = ${env:SX1280_TX_ESP32_PCB_E28.lib_ignore}

[env:SX1280_RX_STM32_2020]
platform = ststm32@6.0.0
framework = arduino
#board = bluepill_f103c8_128k
board = smt32f103c8_128k
# max size = 131072 - 0x4000 = 114688
board_upload.maximum_size = 114688
build_unflags = -Os
build_flags =
	${common_env_data.flags_rx}
	${common_env_data.flags_stm32}
	${common_env_data.flags_stm32_rx_disable}
	-D TARGET_SX1280_RX_STM32F1=1
	-D TARGET_MODULE_LoRa1280=1
	-D DOMAIN_24GHZ=1
	-D HSE_VALUE=12000000U
	-D HSI_VALUE=8000000U
	-O3
	-D VECT_TAB_OFFSET=0x4000U
    -D FLASH_APP_OFFSET=0x4000u
    -Wl,--defsym=FLASH_APP_OFFSET=16K
	-Wl,-Tvariants/STM32F1_128K_ldscript.ld
	-D USE_INTERNAL_XO=0
src_filter = ${common_env_data.src_rx} ${common_env_data.src_stm32}
monitor_speed = 420000
upload_protocol = custom
extra_scripts =
	${common_env_data.extra_scripts}
	python/upload_stlink.py
upload_flags =
    BOOTLOADER=bootloader/bootloader_sx1280_rx_pcb_v02.bin
    VECT_OFFSET=0x4000
lib_deps = SPI
lib_ignore = Wire, DAC, FIFO, LoRa_SX127x

[env:SX1280_RX_STM32_2020_BF_Passthrough]
platform = ${env:SX1280_RX_STM32_2020.platform}
framework = ${env:SX1280_RX_STM32_2020.framework}
board = ${env:SX1280_RX_STM32_2020.board}
board_upload.maximum_size = ${env:SX1280_RX_STM32_2020.board_upload.maximum_size}
build_unflags = ${env:SX1280_RX_STM32_2020.build_unflags}
build_flags = ${env:SX1280_RX_STM32_2020.build_flags}
src_filter = ${env:SX1280_RX_STM32_2020.src_filter}
extra_scripts = ${common_env_data.extra_scripts}
monitor_speed = 420000
upload_protocol = custom
upload_command =
	python python/BFinitPassthrough.py 420000
	python python/UARTupload.py "$SOURCE"
lib_deps = ${env:SX1280_RX_STM32_2020.lib_deps}
lib_ignore = ${env:SX1280_RX_STM32_2020.lib_ignore}

[env:SX1280_RX_STM32_Nano_v0_5]
platform = ststm32@7.2.0
framework = arduino
board = l432kb
# max size = 131072 - 0x4000 = 114688
board_upload.maximum_size = 114688
build_unflags = -Os
build_flags =
	${common_env_data.flags_rx}
	${common_env_data.flags_stm32}
	${common_env_data.flags_stm32_rx_disable}
	-D TARGET_SX1280_RX_NANO_v05=1
	-D TARGET_MODULE_LoRa1280=1
	-D DOMAIN_24GHZ=1
	-D HSI_VALUE=16000000U
	-D USE_HSI=1
	-O3
	-D VECT_TAB_OFFSET=0x4000U
    -D FLASH_APP_OFFSET=0x4000U
    -Wl,--defsym=FLASH_APP_OFFSET=16K
src_filter = ${common_env_data.src_rx} ${common_env_data.src_stm32}
monitor_speed = 420000
upload_protocol = custom
extra_scripts =
	${common_env_data.extra_scripts}
	python/upload_stlink.py
upload_flags =
    BOOTLOADER=bootloader/bootloader_sx1280_rx_nano_v05.bin
    VECT_OFFSET=0x4000
lib_deps = SPI
lib_ignore = Wire, DAC, FIFO, LoRa_SX127x

[env:SX1280_RX_STM32_Nano_v0_5_BF_Passthrough]
platform = ${env:SX1280_RX_STM32_Nano_v0_5.platform}
framework = ${env:SX1280_RX_STM32_Nano_v0_5.framework}
board = ${env:SX1280_RX_STM32_Nano_v0_5.board}
board_upload.maximum_size = ${env:SX1280_RX_STM32_Nano_v0_5.board_upload.maximum_size}
build_unflags = ${env:SX1280_RX_STM32_Nano_v0_5.build_unflags}
build_flags = ${env:SX1280_RX_STM32_Nano_v0_5.build_flags}
src_filter = ${env:SX1280_RX_STM32_Nano_v0_5.src_filter}
extra_scripts = ${common_env_data.extra_scripts}
monitor_speed = 420000
upload_protocol = custom
upload_command =
	python python/BFinitPassthrough.py 420000
	python python/UARTupload.py "$SOURCE"
lib_deps = ${env:SX1280_RX_STM32_Nano_v0_5.lib_deps}
lib_ignore = ${env:SX1280_RX_STM32_Nano_v0_5.lib_ignore}
