[platformio]
#default_envs = DEBUG_HAL_SX1280_RX_STM32_2020_STLINK
#default_envs = DEBUG_HAL_SX1280_RX_STM32_2020

[common_env_data]
unflags_stm32_hal = #-Os
flags_stm32_hal = ${common_env_data.flags_stm32_gen} -I${PROJECTSRC_DIR}/stm32_hal/ -nostdlib -nostartfiles -Os -O3
src_stm32_hal = +<stm32_hal/*.c*> +<stm32_generic/*>

################################# TX CONFIGS ########################################

[env:DEBUG_HAL_TX_R9M_HAL]
platform = ststm32@7.2.0
framework = stm32cube
board = smt32f103c8_128k
# max size = 65536 - 0x2000 = 57344
board_upload.maximum_size = 57344
build_unflags = -Os
build_flags =
	${common_env_data.flags_tx}
	${common_env_data.flags_stm32_hal}
	${common_env_data.flags_stm32_tx_disable}
	-D TARGET_R9M_TX
	-D HSE_VALUE=12000000U
	-D HSI_VALUE=8000000U
    -Wl,--defsym=FLASH_APP_OFFSET=8K
    -Wl,--defsym=RAM_SIZE=20K
    -Wl,--defsym=FLASH_SIZE=64K
	-D USE_INTERNAL_XO=0
board_build.ldscript = variants/F103XX/ldscript.ld
src_filter = ${common_env_data.src_tx} ${common_env_data.src_stm32_hal}
extra_scripts =
	${common_env_data.extra_scripts}
	python/opentx.py
upload_protocol = custom
upload_flags =
	BOOTLOADER=bootloader/r9m_bootloader.bin
	VECT_OFFSET=0x2000
lib_deps =
lib_ignore = SX1280


################################# RX CONFIGS ########################################

[env:DEBUG_HAL_SX1280_RX_STM32_2020]
platform = ststm32@7.2.0
framework = stm32cube
board = smt32f103c8_128k
# max size = 131072 - 16384 = 114688
board_upload.maximum_size = 114688
build_unflags = ${common_env_data.unflags_stm32_hal}
build_flags =
	${common_env_data.flags_rx}
	${common_env_data.flags_stm32_hal}
	${common_env_data.flags_stm32_rx_disable}
	-D TARGET_SX1280_RX_STM32F1=1
	-D TARGET_MODULE_LoRa1280=1
	-D DOMAIN_24GHZ=1
	-D HSE_VALUE=12000000U
	-D HSI_VALUE=8000000U
    -Wl,--defsym=FLASH_APP_OFFSET=16K
    -Wl,--defsym=RAM_SIZE=20K
    -Wl,--defsym=FLASH_SIZE=128K
	-D USE_INTERNAL_XO=0
board_build.ldscript = variants/F103XX/ldscript.ld
src_filter = ${common_env_data.src_rx} ${common_env_data.src_stm32_hal}
monitor_speed = 420000
upload_protocol = custom
extra_scripts =
	${common_env_data.extra_scripts}
	python/upload_stlink.py
upload_flags =
    BOOTLOADER=bootloader/bootloader_sx1280_rx_pcb_v02.bin
    VECT_OFFSET=0x4000
lib_deps =
lib_ignore = DAC, LoRa_SX127x


[env:DEBUG_HAL_SX1280_RX_STM32_2020_BF]
platform = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.platform}
framework = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.framework}
board = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.board}
# max size = 131072 - 16384 = 114688
board_upload.maximum_size = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.board_upload.maximum_size}
build_unflags = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.build_unflags}
build_flags = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.build_flags}
board_build.ldscript = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.board_build.ldscript}
src_filter = ${common_env_data.src_rx} ${common_env_data.src_stm32_hal}
monitor_speed = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.monitor_speed}
extra_scripts =
	${common_env_data.extra_scripts}
#	python/upload_stlink.py
upload_protocol = custom
upload_command =
	python python/BFinitPassthrough.py 420000
	python python/UARTupload.py "$SOURCE"
lib_deps = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.lib_deps}
lib_ignore = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.lib_ignore}


[env:DEBUG_HAL_SX1280_RX_STM32_2020_STLINK]
platform = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.platform}
framework = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.framework}
board = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.board}
# max size = 131072 - 16384 = 114688
board_upload.maximum_size = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.board_upload.maximum_size}
build_unflags = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.build_unflags}
build_flags =
	${common_env_data.flags_rx}
	${common_env_data.flags_stm32_hal}
	${common_env_data.flags_stm32_rx_disable}
	-D TARGET_SX1280_RX_STM32F1=1
	-D TARGET_MODULE_LoRa1280=1
	-D DOMAIN_24GHZ=1
	-D HSE_VALUE=12000000U
	-D HSI_VALUE=8000000U
	-Wl,--defsym=FLASH_APP_OFFSET=0
    -Wl,--defsym=RAM_SIZE=20K #0x5000
    -Wl,--defsym=FLASH_SIZE=128K
	-D USE_INTERNAL_XO=0
board_build.ldscript = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.board_build.ldscript}
src_filter = ${common_env_data.src_rx} ${common_env_data.src_stm32_hal}
monitor_speed = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.monitor_speed}
#upload_protocol = stlink
upload_protocol = custom
extra_scripts =
	${common_env_data.extra_scripts}
	python/upload_stlink.py
upload_flags =
    #BOOTLOADER=bootloader/bootloader_sx1280_rx_pcb_v02.bin
    #VECT_OFFSET=0x4000
lib_deps = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.lib_deps}
lib_ignore = ${env:DEBUG_HAL_SX1280_RX_STM32_2020.lib_ignore}
debug_build_flags = -O0 -ggdb3 -g3
#debug_build_flags = -O3 -ggdb3 -g3
#debug_build_flags = -O3


# ----------------------------------------

[env:DEBUG_HAL_SX1280_RX_STM32_Nano_v0_5]
platform = ststm32@7.2.0
framework = stm32cube
board = l432kb
# max size = 131072 - 0x4000 = 114688
board_upload.maximum_size = 114688
build_unflags = ${common_env_data.unflags_stm32_hal}
build_flags =
	${common_env_data.flags_rx}
	${common_env_data.flags_stm32_hal}
	${common_env_data.flags_stm32_rx_disable}
	-D TARGET_SX1280_RX_NANO_v05=1
	-D TARGET_MODULE_LoRa1280=1
	-D DOMAIN_24GHZ=1
	-D HSI_VALUE=16000000U
	-D USE_HSI=1
    -Wl,--defsym=FLASH_APP_OFFSET=16K
    -Wl,--defsym=RAM_SIZE=64K
    -Wl,--defsym=FLASH_SIZE=128K
board_build.ldscript = variants/L432K/ldscript.ld
src_filter = ${common_env_data.src_rx} ${common_env_data.src_stm32_hal}
monitor_speed = 420000
upload_protocol = custom
extra_scripts =
	${common_env_data.extra_scripts}
	python/upload_stlink.py
upload_flags =
    BOOTLOADER=bootloader/bootloader_sx1280_rx_nano_v05.bin
    VECT_OFFSET=0x4000
lib_deps =
lib_ignore = DAC, LoRa_SX127x


# ----------------------------------------

[env:DEBUG_HAL_RAK4200]
platform = ststm32@7.2.0
framework = stm32cube
board = rak4200
# max size = 65536 - 0x4000 = 49152
board_upload.maximum_size = 49152
build_unflags = ${common_env_data.unflags_stm32_hal}
build_flags =
	${common_env_data.flags_rx}
	${common_env_data.flags_stm32_hal}
	${common_env_data.flags_stm32_rx_disable}
	-D TARGET_RAK4200=1
	-D HSI_VALUE=16000000U
    -Wl,--defsym=FLASH_APP_OFFSET=16K
    -Wl,--defsym=RAM_SIZE=20K
    -Wl,--defsym=FLASH_SIZE=64K
board_build.ldscript = variants/RAK4200/ldscript.ld
src_filter = ${common_env_data.src_rx} ${common_env_data.src_stm32_hal}
monitor_speed = 420000
upload_protocol = custom
extra_scripts =
	${common_env_data.extra_scripts}
	python/upload_stlink.py
upload_flags =
    BOOTLOADER=bootloader/rak4200_bootloader.bin
    VECT_OFFSET=0x4000
lib_deps =
lib_ignore = DAC, SX1280
